[{"C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\index.js":"1","C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\App.js":"2","C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\reportWebVitals.js":"3","C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\components\\List\\List.jsx":"4","C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\components\\AddList\\AddButtonList.jsx":"5","C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\components\\Badge\\Badge.jsx":"6","C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\components\\Tasks\\Tasks.jsx":"7","C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\components\\Tasks\\AddTasksForm.jsx":"8"},{"size":503,"mtime":1610381869993,"results":"9","hashOfConfig":"10"},{"size":4121,"mtime":1610454839724,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":1281,"mtime":1610454801038,"results":"13","hashOfConfig":"10"},{"size":3395,"mtime":1610454345754,"results":"14","hashOfConfig":"10"},{"size":276,"mtime":1610269217947,"results":"15","hashOfConfig":"10"},{"size":2088,"mtime":1610451874949,"results":"16","hashOfConfig":"10"},{"size":2184,"mtime":1610454102817,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"w8zihk",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\index.js",[],["36","37"],"C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\App.js",[],"C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\reportWebVitals.js",[],"C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\components\\List\\List.jsx",[],"C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\components\\AddList\\AddButtonList.jsx",["38"],"import React, { useState, useEffect } from 'react';\r\nimport { Badge } from '../Badge/Badge';\r\nimport { List } from '../List/List';\r\nimport closeSvg from '../../assets/img/close.svg'\r\nimport axios from 'axios'\r\n\r\nimport \"./AddButtonList.scss\";\r\n\r\n\r\n\r\nexport const AddList = ({ colors, oneAddList }) => {\r\n\r\n    const [visiblePopup, setVisiblePopup] = useState(false)\r\n    const [selectedColor, selectColor] = useState(3)\r\n    const [inputValue, setInputValue] = useState('')\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(colors)) {\r\n            selectColor(colors[0].id)\r\n        }\r\n    }, [])\r\n\r\n    const onClose = () => {\r\n        setVisiblePopup(false)\r\n        setInputValue('')\r\n        selectColor(colors[0].id)\r\n    }\r\n\r\n\r\n    const addList = () => {\r\n        if (!inputValue) {\r\n            alert('Браток давай текст')\r\n            return\r\n        }\r\n\r\n        setIsLoading(true)\r\n        axios.post('http://localhost:3001/lists', { name: inputValue, colorId: selectedColor }).then(({ data }) => {\r\n            const color = colors.filter(c => c.id === selectedColor)[0].name\r\n            const listObj = { ...data, color: { name: color, } }\r\n            oneAddList(listObj)\r\n            onClose()\r\n            setIsLoading()\r\n        })\r\n            .catch(() => {\r\n                alert('Ошибка при добавление списка')\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"add-list\">\r\n            <List onClick={() => setVisiblePopup(true)}\r\n                items={[\r\n                    {\r\n                        className: 'list__add-button',\r\n                        icon: (\r\n                            <svg width=\"12\" height=\"12\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M8 1V15\" stroke=\"black\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                <path d=\"M1 8H15\" stroke=\"black\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                            </svg>\r\n                        ),\r\n                        name: 'Добавить список',\r\n                    }\r\n                ]}\r\n            />\r\n\r\n            {visiblePopup &&\r\n                <div className=\"add-list__popup\">\r\n                    <img onClick={onClose} className='add-list__popup-close-btn' src={closeSvg} alt=\"close btn\" />\r\n\r\n                    <input className=\"field\" placeholder=\"Название списка\"\r\n                        value={inputValue} onChange={e => setInputValue(e.target.value)} />\r\n\r\n                    <div className=\"add-list__popup-colors\">\r\n                        {colors.map(color => (\r\n                            <Badge onClick={() => selectColor(color.id)} key={color.id}\r\n                                color={color.name} className={selectedColor === color.id && 'active'} />\r\n                        )\r\n                        )}\r\n                    </div>\r\n\r\n                    <button disabled={isLoading} className='button' onClick={addList}>\r\n                        {isLoading ? 'Добавление...' : 'Добавить'}\r\n                    </button>\r\n\r\n                </div>}\r\n        </div>\r\n\r\n    )\r\n\r\n}","C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\components\\Badge\\Badge.jsx",[],"C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\components\\Tasks\\Tasks.jsx",[],"C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\components\\Tasks\\AddTasksForm.jsx",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":22,"column":8,"nodeType":"45","endLine":22,"endColumn":10,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'colors'. Either include it or remove the dependency array. If 'selectColor' needs the current value of 'colors', you can also switch to useReducer instead of useState and read 'colors' in the reducer.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [colors]",{"range":"52","text":"53"},[650,652],"[colors]"]