[{"C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\index.js":"1","C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\App.js":"2","C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\reportWebVitals.js":"3","C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\components\\List\\List.jsx":"4","C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\components\\AddList\\AddButtonList.jsx":"5","C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\components\\Badge\\Badge.jsx":"6","C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\components\\Tasks\\Tasks.jsx":"7"},{"size":503,"mtime":1610131529044,"results":"8","hashOfConfig":"9"},{"size":3126,"mtime":1610380734619,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":875,"mtime":1610379644697,"results":"12","hashOfConfig":"9"},{"size":2912,"mtime":1610378730377,"results":"13","hashOfConfig":"9"},{"size":276,"mtime":1610269217947,"results":"14","hashOfConfig":"9"},{"size":1151,"mtime":1610368149233,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"w8zihk",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\index.js",[],["32","33"],"C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\App.js",["34"],"C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\reportWebVitals.js",[],"C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\components\\List\\List.jsx",[],"C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\components\\AddList\\AddButtonList.jsx",["35"],"import React, { useState, useEffect } from 'react';\r\nimport { Badge } from '../Badge/Badge';\r\nimport { List } from '../List/List';\r\nimport closeSvg from '../../assets/img/close.svg'\r\nimport axios from 'axios'\r\n\r\nimport \"./AddButtonList.scss\";\r\n\r\n\r\n\r\nexport const AddList = ({ colors, oneAddList }) => {\r\n\r\n    const [visiblePopup, setVisiblePopup] = useState(false)\r\n    const [selectedColor, selectColor] = useState(3)\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(colors)) {\r\n            selectColor(colors[0].id)\r\n        }\r\n    }, [])\r\n\r\n    const onClose = () => {\r\n        setVisiblePopup(false)\r\n        setInputValue('')\r\n        selectColor(colors[0].id)\r\n    }\r\n\r\n\r\n    const addList = () => {\r\n        if (!inputValue) {\r\n            alert('Браток давай текст')\r\n            return\r\n        }\r\n        // const color = colors.filter(c => c.id === selectedColor)[0].name\r\n        axios.post('http://localhost:3001/lists', { name: inputValue, colorId: selectedColor }).then(({ data }) => {\r\n            console.log(data)\r\n        })\r\n        // oneAddList()\r\n        onClose()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"add-list\">\r\n            <List onClick={() => setVisiblePopup(true)}\r\n                items={[\r\n                    {\r\n                        className: 'list__add-button',\r\n                        icon: (\r\n                            <svg width=\"12\" height=\"12\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M8 1V15\" stroke=\"black\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                <path d=\"M1 8H15\" stroke=\"black\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                            </svg>\r\n                        ),\r\n                        name: 'Добавить список',\r\n                    }\r\n                ]}\r\n            />\r\n\r\n            {visiblePopup &&\r\n                <div className=\"add-list__popup\">\r\n                    <img onClick={onClose} className='add-list__popup-close-btn' src={closeSvg} alt=\"close btn\" />\r\n\r\n                    <input className=\"field\" placeholder=\"Название списка\"\r\n                        value={inputValue} onChange={e => setInputValue(e.target.value)} />\r\n\r\n                    <div className=\"add-list__popup-colors\">\r\n                        {colors.map(color => (\r\n                            <Badge onClick={() => selectColor(color.id)} key={color.id}\r\n                                color={color.name} className={selectedColor === color.id && 'active'} />\r\n                        )\r\n                        )}\r\n                    </div>\r\n\r\n                    <button className='button' onClick={addList}>Добавить</button>\r\n                </div>}\r\n        </div>\r\n\r\n    )\r\n\r\n}","C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\components\\Badge\\Badge.jsx",[],"C:\\Users\\admin\\Desktop\\react\\todo-app\\src\\components\\Tasks\\Tasks.jsx",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":34,"column":11,"nodeType":"42","messageId":"43","endLine":34,"endColumn":19},{"ruleId":"44","severity":1,"message":"45","line":21,"column":8,"nodeType":"46","endLine":21,"endColumn":10,"suggestions":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'onRemove' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'colors'. Either include it or remove the dependency array. If 'selectColor' needs the current value of 'colors', you can also switch to useReducer instead of useState and read 'colors' in the reducer.","ArrayExpression",["50"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [colors]",{"range":"53","text":"54"},[595,597],"[colors]"]